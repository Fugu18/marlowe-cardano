Delimiter statement: SELECT createTxOut.txId, createTxOut.txIx, createTxOut.slotNo FROM marlowe.createTxOut NATURAL JOIN marlowe.contractTxOut NATURAL JOIN UNNEST($1) AS roles (rolesCurrency) WHERE (createTxOut.txId = $2 AND createTxOut.txIx = $3) AND (EXISTS (SELECT 1 FROM marlowe.contractTxOutTag NATURAL JOIN UNNEST($4) AS tags (tag) WHERE contractTxOutTag.txId = createTxOut.txId AND contractTxOutTag.txIx = createTxOut.txIx))
Total count statement: SELECT count(*) FROM marlowe.createTxOut NATURAL JOIN marlowe.contractTxOut NATURAL JOIN UNNEST($1) AS roles (rolesCurrency) WHERE EXISTS (SELECT 1 FROM marlowe.contractTxOutTag NATURAL JOIN UNNEST($2) AS tags (tag) WHERE contractTxOutTag.txId = createTxOut.txId AND contractTxOutTag.txIx = createTxOut.txIx)
Headers statement: SELECT createTxOut.slotNo, createTxOut.blockId, createTxOut.blockNo, createTxOut.txId, createTxOut.txIx, contractTxOut.rolesCurrency, createTxOut.metadata, txOut.address, contractTxOut.payoutScriptHash FROM marlowe.createTxOut NATURAL JOIN marlowe.contractTxOut NATURAL JOIN marlowe.txOut NATURAL JOIN UNNEST($1) AS roles (rolesCurrency) WHERE (createTxOut.slotNo > $2 OR (createTxOut.slotNo = $2 AND (createTxOut.txId > $3 OR (createTxOut.txId = $3 AND createTxOut.txIx >= $4)))) AND (EXISTS (SELECT 1 FROM marlowe.contractTxOutTag NATURAL JOIN UNNEST($5) AS tags (tag) WHERE contractTxOutTag.txId = createTxOut.txId AND contractTxOutTag.txIx = createTxOut.txIx)) ORDER BY createTxOut.slotNo, createTxOut.txId, createTxOut.txIx OFFSET $6 FETCH NEXT $7 ROWS ONLY
