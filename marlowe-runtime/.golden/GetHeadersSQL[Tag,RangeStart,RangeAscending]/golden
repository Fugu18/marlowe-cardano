Delimiter statement: SELECT createTxOut.txId, createTxOut.txIx, createTxOut.slotNo FROM marlowe.createTxOut WHERE (createTxOut.txId = $1 AND createTxOut.txIx = $2) AND (EXISTS (SELECT 1 FROM marlowe.contractTxOutTag NATURAL JOIN UNNEST($3) AS tags (tag) WHERE contractTxOutTag.txId = createTxOut.txId AND contractTxOutTag.txIx = createTxOut.txIx))
Total count statement: SELECT count(*) FROM marlowe.createTxOut WHERE EXISTS (SELECT 1 FROM marlowe.contractTxOutTag NATURAL JOIN UNNEST($1) AS tags (tag) WHERE contractTxOutTag.txId = createTxOut.txId AND contractTxOutTag.txIx = createTxOut.txIx)
Headers statement: SELECT createTxOut.slotNo, createTxOut.blockId, createTxOut.blockNo, createTxOut.txId, createTxOut.txIx, contractTxOut.rolesCurrency, createTxOut.metadata, txOut.address, contractTxOut.payoutScriptHash FROM marlowe.createTxOut NATURAL JOIN marlowe.contractTxOut NATURAL JOIN marlowe.txOut WHERE (createTxOut.slotNo > $1 OR (createTxOut.slotNo = $1 AND (createTxOut.txId > $2 OR (createTxOut.txId = $2 AND createTxOut.txIx >= $3)))) AND (EXISTS (SELECT 1 FROM marlowe.contractTxOutTag NATURAL JOIN UNNEST($4) AS tags (tag) WHERE contractTxOutTag.txId = createTxOut.txId AND contractTxOutTag.txIx = createTxOut.txIx)) ORDER BY createTxOut.slotNo, createTxOut.txId, createTxOut.txIx OFFSET $5 FETCH NEXT $6 ROWS ONLY
