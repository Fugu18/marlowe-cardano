Delimiter statement: WITH partyAddresses (address) AS (SELECT * FROM UNNEST($1)), partyRoles (rolesCurrency, role) AS (SELECT * FROM UNNEST($2, $3)) SELECT createTxOut.txId, createTxOut.txIx, createTxOut.slotNo FROM marlowe.createTxOut WHERE (createTxOut.txId = $4 AND createTxOut.txIx = $5) AND ((EXISTS (SELECT 1 FROM marlowe.contractTxOutPartyAddress NATURAL JOIN partyAddresses WHERE createTxOut.txId = contractTxOutPartyAddress.createTxId AND createTxOut.txIx = contractTxOutPartyAddress.createTxIx)) OR (EXISTS (SELECT 1 FROM marlowe.contractTxOutPartyRole NATURAL JOIN partyRoles WHERE createTxOut.txId = contractTxOutPartyRole.createTxId AND createTxOut.txIx = contractTxOutPartyRole.createTxIx)))
Total count statement: WITH partyAddresses (address) AS (SELECT * FROM UNNEST($1)), partyRoles (rolesCurrency, role) AS (SELECT * FROM UNNEST($2, $3)) SELECT count(*) FROM marlowe.createTxOut WHERE (EXISTS (SELECT 1 FROM marlowe.contractTxOutPartyAddress NATURAL JOIN partyAddresses WHERE createTxOut.txId = contractTxOutPartyAddress.createTxId AND createTxOut.txIx = contractTxOutPartyAddress.createTxIx)) OR (EXISTS (SELECT 1 FROM marlowe.contractTxOutPartyRole NATURAL JOIN partyRoles WHERE createTxOut.txId = contractTxOutPartyRole.createTxId AND createTxOut.txIx = contractTxOutPartyRole.createTxIx))
Headers statement: WITH partyAddresses (address) AS (SELECT * FROM UNNEST($1)), partyRoles (rolesCurrency, role) AS (SELECT * FROM UNNEST($2, $3)) SELECT createTxOut.slotNo, createTxOut.blockId, createTxOut.blockNo, createTxOut.txId, createTxOut.txIx, contractTxOut.rolesCurrency, createTxOut.metadata, txOut.address, contractTxOut.payoutScriptHash FROM marlowe.createTxOut NATURAL JOIN marlowe.contractTxOut NATURAL JOIN marlowe.txOut WHERE (createTxOut.slotNo > $4 OR (createTxOut.slotNo = $4 AND (createTxOut.txId > $5 OR (createTxOut.txId = $5 AND createTxOut.txIx >= $6)))) AND ((EXISTS (SELECT 1 FROM marlowe.contractTxOutPartyAddress NATURAL JOIN partyAddresses WHERE createTxOut.txId = contractTxOutPartyAddress.createTxId AND createTxOut.txIx = contractTxOutPartyAddress.createTxIx)) OR (EXISTS (SELECT 1 FROM marlowe.contractTxOutPartyRole NATURAL JOIN partyRoles WHERE createTxOut.txId = contractTxOutPartyRole.createTxId AND createTxOut.txIx = contractTxOutPartyRole.createTxIx))) ORDER BY createTxOut.slotNo, createTxOut.txId, createTxOut.txIx OFFSET $7 FETCH NEXT $8 ROWS ONLY
