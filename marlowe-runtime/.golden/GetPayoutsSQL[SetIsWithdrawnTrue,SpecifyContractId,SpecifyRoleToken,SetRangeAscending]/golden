Total count statement: WITH contractIds (createTxId, createTxIx) AS (SELECT * FROM UNNEST($1, $2)), roleTokens (rolesCurrency, role) AS (SELECT * FROM UNNEST($3, $4)) SELECT count(*) FROM marlowe.payoutTxOut NATURAL JOIN marlowe.applyTx NATURAL JOIN contractIds NATURAL JOIN roleTokens INNER JOIN marlowe.withdrawalTxIn ON payoutTxOut.txId = withdrawalTxIn.payoutTxId AND payoutTxOut.txIx = withdrawalTxIn.payoutTxIx WHERE (TRUE) AND withdrawalTxIn.txId NOTNULL
Payouts statement: WITH contractIds (createTxId, createTxIx) AS (SELECT * FROM UNNEST($1, $2)), roleTokens (rolesCurrency, role) AS (SELECT * FROM UNNEST($3, $4)) SELECT withdrawalTxIn.txId, applyTx.createTxId, applyTx.createTxIx, payoutTxOut.txId, payoutTxOut.txIx, payoutTxOut.rolesCurrency, payoutTxOut.role FROM marlowe.payoutTxOut NATURAL JOIN marlowe.applyTx NATURAL JOIN contractIds NATURAL JOIN roleTokens INNER JOIN marlowe.withdrawalTxIn ON payoutTxOut.txId = withdrawalTxIn.payoutTxId AND payoutTxOut.txIx = withdrawalTxIn.payoutTxIx WHERE withdrawalTxIn.txId NOTNULL ORDER BY applyTx.slotNo, payoutTxOut.txId, payoutTxOut.txIx OFFSET $5 FETCH NEXT $6 ROWS ONLY
