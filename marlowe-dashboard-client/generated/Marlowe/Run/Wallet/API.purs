-- File auto generated by purescript-bridge! --
module Marlowe.Run.Wallet.API where

import Prelude

import Control.Lazy (defer)
import Data.Argonaut.Core (jsonNull)
import Data.Argonaut.Decode (class DecodeJson)
import Data.Argonaut.Decode.Aeson ((</$\>), (</*\>), (</\>))
import Data.Argonaut.Decode.Aeson as D
import Data.Argonaut.Encode (class EncodeJson, encodeJson)
import Data.Argonaut.Encode.Aeson ((>$<), (>/\<))
import Data.Argonaut.Encode.Aeson as E
import Data.BigInt.Argonaut (BigInt)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', iso, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Map (Map)
import Data.Map as Map
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype, unwrap)
import Data.Show.Generic (genericShow)
import Data.Tuple.Nested ((/\))
import Type.Proxy (Proxy(Proxy))

newtype GetTotalFundsResponse = GetTotalFundsResponse
  { assets :: Map String (Map String BigInt)
  , sync :: Number
  }

derive instance eqGetTotalFundsResponse :: Eq GetTotalFundsResponse

instance showGetTotalFundsResponse :: Show GetTotalFundsResponse where
  show a = genericShow a

instance encodeJsonGetTotalFundsResponse :: EncodeJson GetTotalFundsResponse where
  encodeJson = defer \_ -> E.encode $ unwrap >$<
    ( E.record
        { assets:
            (E.dictionary E.value (E.dictionary E.value E.value)) :: _
              (Map String (Map String BigInt))
        , sync: E.value :: _ Number
        }
    )

instance decodeJsonGetTotalFundsResponse :: DecodeJson GetTotalFundsResponse where
  decodeJson = defer \_ -> D.decode $
    ( GetTotalFundsResponse <$> D.record "GetTotalFundsResponse"
        { assets:
            (D.dictionary D.value (D.dictionary D.value D.value)) :: _
              (Map String (Map String BigInt))
        , sync: D.value :: _ Number
        }
    )

derive instance genericGetTotalFundsResponse :: Generic GetTotalFundsResponse _

derive instance newtypeGetTotalFundsResponse :: Newtype GetTotalFundsResponse _

--------------------------------------------------------------------------------

_GetTotalFundsResponse :: Iso' GetTotalFundsResponse
  { assets :: Map String (Map String BigInt), sync :: Number }
_GetTotalFundsResponse = _Newtype
